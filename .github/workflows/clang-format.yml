#
# Copyright (c) 2020 The nanoFramework project contributors
# See LICENSE file in the project root for full license information.
#

name: "Check clang-format"

on: [pull_request]

jobs:
  format:
    name: "Check clang-format"

    runs-on: ubuntu-latest

    steps:

    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - uses: juliangruber/find-pull-request-action@v1
      id: GetPR
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}

    - name: "Install clang-format-10"
      run: |
        sudo apt-get update
        sudo apt-get install clang-format-10
    
    - name: "Check source code style"
      run: |
        
        SRC=$(git diff --name-only --diff-filter=d $(git merge-base HEAD origin/${{ github.event.pull_request.base.ref }}) | grep -E ".c$|.h$|.cpp$")

        for changed_file in $SRC; do
          clang-format-10 -style=file -i ${changed_file}
        done

    - name: Check diff
      id: HasDiff
      if: success()
      run: echo "::set-output name=diff::$(git diff --exit-code HEAD)"
    
    - name: Create Pull Request
      if: success() && steps.HasDiff.outputs.diff
      uses: peter-evans/create-pull-request@v2
      with:
        commit-message: "Automated fix of code style using project clang-format rules."
        title: "Fix code style for ${{ github.repository }}/${{ steps.GetPR.outputs.number }}"
        assignees: "${{ github.actor }}"
        branch: "auto-pr/clang-format/${{ steps.GetPR.outputs.number }}"

    - name: Check outputs
      if: success()
      run: |
        echo "Submitted PR with code style fixes - ${{ steps.GetPR.outputs.number }}"
